build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
#build.home=build
#build.classes.dir=${build.home}/WEB-INF/classes
#build.test.classes.dir=${build.home}/test/classes
#reports.dir=${build.home}/test/results
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
buildfile=nbproject/ide-targets.xml
ant.script=${buildfile}
# Uncomment to specify the preferred debugger connection transport:
debug.transport=dt_socket
debug.classpath=\
    ${run.classpath}
debug.modulepath=\
    ${run.modulepath}
debug.test.classpath=\
    ${run.test.classpath}
debug.test.modulepath=\
    ${run.test.modulepath}
# Files in build.classes.dir which should be excluded from distribution jar
dist.archive.excludes=
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/${web.app.name}.jar
#dist.javadoc.dir=${dist.dir}/doc/api
excludes=
file.reference.src-java=src/java
file.reference.corpus-java=test/corpus/java
file.reference.integration-java=test/integration/java
file.reference.unit-java=test/unit/java
includes=**
jar.compress=false
lib.dir=lib
javac.classpath=\
    lib/commons-lang3-3.12.0.jar:\
    lib/cos-09May2002.jar:\
    lib/guava-19.0.jar:\
    lib/h2-2.3.232.jar:\
    lib/java-prolog-parser-2.0.2.jar:\
    lib/json-simple-1.1.1.jar:\
    lib/kryo-5.6.2.jar:\
    lib/py4j-0.10.6.jar:\
    lib/sigmaUtils.jar:\
    lib/stanford-corenlp-4.5.7.jar:\
    lib/tptp.jar
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=false
javac.external.vm=true
#javac.release=11
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    lib/hamcrest-core-1.3.jar:\
    lib/junit-4.13.2.jar:\
    lib/objenesis-3.4.jar
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.html5=false
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
#manifest.mf=MANIFEST.MF
platform.active=default_platform
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    lib/antlr4-runtime-4.9.3.jar:\
    lib/mail-1.4.7.jar:\
    lib/minlog-1.3.1.jar:\
    lib/objenesis-3.4.jar:\
    lib/reflectasm-1.11.9.jar:\
    lib/tomcat-servlet-api-9.0.97.jar

# Space-separated list of JVM arguments used when running the project.
# You may also define separate properties like run-sys-prop.name=value instead of -Dname=value.
# To set system properties for unit tests define test-sys-prop.name=value:
#run.jvmargs=-Xmx10g -Xss1m
debug.jvmargs=${run.jvmargs}
run.modulepath=\
    ${javac.modulepath}
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}:\
    lib/antlr4-runtime-4.9.3.jar:\
    lib/minlog-1.3.1.jar:\
    lib/reflectasm-1.11.9.jar
run.test.modulepath=\
    ${javac.test.modulepath}
source.encoding=UTF-8
#src.dir=${file.reference.src-java}
#test.corpus.dir=${file.reference.corpus-java}
#test.integration.dir=${file.reference.integration-java}
#test.unit.dir=${file.reference.unit-java}

# Specific SigmaKEE props
#app.name=sigma
#web.app.name=${app.name}kee
ontologyportal.git=${workspace}
#web.dir=web
sigma_src=${basedir}
sigma_home=${user.home}/.${web.app.name}
#tptp.home=../TPTP-ANTLR
#sigma.install.downloads=${sigma_home}/downloads
#sigma.utils.home=../SigmaUtils
kbs_home=${ontologyportal.git}/sumo
#impl.title=SigmaKEE
#impl.vendor.id=edu.nps.cs
#sumo.url=http://www.ontologyportal.org
#nps=Naval Postgraduate School (NPS), Monterey, CA
#cs.dept=Computer Science (CS) DEPT

#product.Name=Sigma Knowledge Engineering Environment (${ant.project.name})
#product.version.major=1
#product.version.minor=0
#product.version.patch=0
#product.Version=${product.version.major}.${product.version.minor}.\
#    ${product.version.patch}
#spec.vendor=Adam Pease
project.license=LICENSE

# Tomcat Manager properties
catalina.ops=-Xmx10g -Xss1m
catalina.base=${catalina.home}
catalina.logs.dir=${catalina.base}/logs
catalina.out=${catalina.logs.dir}/catalina.out
catalina=catalina.sh
startup=startup.sh
shutdown=shutdown.sh
tomcat.server=localhost
tomcat.port=8080
# Since Tomcat 7, note that the URL for the text interface has changed from "/manager" to "/manager/text".
mgr.url=http://${tomcat.server}:${tomcat.port}/manager/text
# Check that these properties match in ${catalina.home}/conf/tomcat-users.xml
username=tomcat
password=tomcat
context=/${app.name}

deploy.url=http://localhost:8080/${app.name}/login.html

# Go directly to the KB page. Takes a while to load
#deploy.url=http://localhost:8080/${app.name}/KBs.jsp
#deploy.url=http://localhost:8080/${app.name}/init.jsp

dist_home=${catalina.base}/webapps
deploy_home=${dist_home}/${app.name}
dist_war=${dist_home}/${app.name}.war

#reports.dir=${build.home}/reports
#report.html=file:${basedir}/${reports.dir}/html/index.html
test.unit.resources.dir=${test.unit.dir}/resources
test.integration.resources.dir=${test.integration.dir}/resources
#unit.test.suite=com.articulate.sigma.UnitTestSuite
#integration.test.suite=com.articulate.sigma.IntegrationTestSuite

# Can't override immutable props
#main.class=com.articulate.sigma.KB
run.class=${main.class}
# Load KB files w/ KButilities (should regenerate the KB if cleaned). Add -N for
# sequential (slower) processing <- original implementation
#run.args=-l
# Default run for checking KB operation
run.args=-c Object Transaction

#run.class=com.articulate.sigma.KButilities
# Formula check for errors
formula='(=> (and (muscleInsertion ?MC ?BPC) (instance ?H Human) (attribute ?H Healthy)) (exists (?M ?BP) (and (instance ?M ?MC) (instance ?BP ?BPC) (part ?M ?H) (part ?BP ?H) (connects ?M ?BP))))'
# Error checking a formula w/ com.articulate.sigma.KButilities
#run.args=-v ${formula}

#run.class=com.articulate.sigma.KBcache
#run.args=-a

# WordNet term search
#run.class=com.articulate.sigma.wordNet.WordNet
#run.args=-w Cat

# KB, KIF, TPTP3ProofProcessor, TPTPutil, SUMOtoTFAform - run a test
#run.args=-t

# Test internal clause in TPTP2SUMO
#run.class=com.articulate.sigma.trans.TPTP2SUMO
#run.args=-c

# Runs Vampire on ~.sigmakee/KBs/SUMO.tptp, produces and analyzes proof
#run.class=com.articulate.sigma.tp.Vampire
#run.args=-p

### Begin Ontology Process

# (1) Generates FOF, no args
#run.class com.articulate.sigma.trans.SUMOKBtoTPTPKB
#run.args=
# or
# (1) Generates TFF, no args
#run.class=com.articulate.sigma.trans.SUMOKBtoTFAKB
#run.args=

# (2) run: ant run.vampire

# (3) Analyzes proof after CLI or Ant run of Vampire
#run.class=com.articulate.sigma.trans.TPTP3ProofProcessor
#run.args=-f ${vamp.out.file}

# (4) View the proof
# run: ant open.dot.image

### End Ontology Process

# Vampire

# default timeout is 60 if -t is not specified
# NOTE: [- -mode casc] is a shortcut for [- -mode portfolio -sched casc -p tptp]
#tptp.file=${workspace}/sigmakee/nbproject/private/resources/tiny/SUMO.tptp
#vamp.out.file=${workspace}/sigmakee/nbproject/private/resources/tiny/vamp-out.txt
#tptp.file=${sigma_home}/KBs/SUMO.tptp
tptp.ext=fof
tptp.file=${sigma_home}/KBs/SUMO.${tptp.ext}
vamp.out.file=${sigma_home}/KBs/vamp-out.txt
vamp.time=-t 900
#vamp.args=--mode casc ${vamp.time} ${tptp.file} &amp;> ${vamp.out.file}
vamp.args=--cores 0 --mode portfolio --schedule snake_tptp_uns -p tptp --input_syntax tptp --output_axiom_names on ${vamp.time} ${tptp.file} &> ${vamp.out.file}

dot.cmd=/usr/local/bin/dot
image.ext=svg
# default: dot
#dot.layout=
dot.layout=-Kdot
dot.file='${deploy_home}/graph/proof.dot'
dot.args=-T${image.ext} ${dot.layout} -O ${dot.file}
dot.image.file=${dot.file}.${image.ext}

# PasswordService
#System.out.println("PasswordService: ");
#System.out.println("-h    show this Help message");
#System.out.println("-l    Login");
#System.out.println("-c    Create db");
#System.out.println("-a    create Admin user");

#System.out.println("-u    show User IDs");
#System.out.println("-r    Register a new username and password (fail if username taken)");
#System.out.println("-a3 <u> <p> <e>  create Admin user");
#System.out.println("-o <id>          change user role");
#System.out.println("-n <id>          create New guest user");
#System.out.println("-f <id>          find user with given ID");
#System.out.println("-d <id>          Delete user with given ID");
pword.props=-f sa
