<?xml version="1.0" encoding="UTF-8"?>
<project basedir=".." name="SigmaKEE-IDE">

    <!--
    ========
    TASKDEFs
    ========
    -->

    <property file="nbproject/private/private.properties"/>
    <import   file="../build.xml"/>
    <property file="nbproject/build.properties"/>
    <import   file="${catalina.base}/bin/catalina-tasks.xml"/>

    <path id="rcp">
        <path path="${run.classpath}"/>
    </path>
    <path id="dcp">
        <path path="${debug.classpath}"/>
    </path>
    <path id="tcp">
        <path path="${run.test.classpath}"/>
    </path>

    <!--
    ====
    INIT
    ====
    -->

    <target name="init" depends="init-ivy">
        <echo message="Welcome to the ${product.Name} v${product.Version}"/>
        <echo message="Specification Vendor:     ${spec.vendor}"/>
        <echo message=""/>
        <echo message="CATALINA_HOME is set to:  ${catalina.base}"/>
        <echo message="SIGMA_HOME    is set to:  ${sigma_home}"/>
        <echo message="SIGMA_SRC     is set to:  ${sigma_src}"/>
        <echo message="KBs_HOME      is set to:  ${kbs_home}"/>
        <echo message="Git dir       is set to:  ${ontologyportal.git}"/>
        <echo message="basedir       is set to:  ${basedir}"/>
        <echo message="classpath:                ${run.classpath}"/>
        <echo message="Java Version via Ant:     ${ant.java.version}"/>
        <echo message="Java Version System Prop: ${java.version}"/>

        <tstamp>
            <format property="TODAY_US" pattern="EEE, d MMM yyyy HHmm Z" locale="en,US"/>
        </tstamp>
    </target>
    <target name="TPTP" depends="prepare">
        <echo message="SIGMA_HOME is set to: ${sigma_home}"/>
        <echo message="TPTP is set to: ${tptp.home}"/>
        <!-- TPTP already builds SigmaUtils -->
        <ant antfile="${tptp.home}/build.xml" inheritAll="false" target="all"/>
        <copy todir="${basedir}/lib" file="${tptp.home}/tptp.jar"/>
        <copy todir="${basedir}/lib" file="${sigma.utils.home}/sigmaUtils.jar"/>
        <!-- Create WEB-INF/lib/ and copy over the needed jar files. -->
        <copy todir="${build.home}/WEB-INF/lib" flatten="true">
            <fileset dir="${lib.dir}">
                <include name="*.jar"/>
                <exclude name="junit*"/>
                <exclude name="hamcrest*"/>
                <exclude name="tomcat-servlet-api*"/>
            </fileset>
        </copy>
    </target>

    <!--
    =================
    RUN TASKS FOR SRC
    =================
    -->

    <target name="run" depends="compile" description="Performs a test run of SigmaKEE using default arguments">
        <java classname="${main.class}"
              classpath="${run.classpath}"
              fork="true">
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${basedir}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <arg line="-c Object Transaction"/>
        </java>
    </target>
    <target name="run-selected-file-in-java" depends="compile">
        <fail unless="run.class">Must set property 'run.class'</fail>
        <java classname="${run.class}"
              classpathref="rcp"
              fork="true">
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${sigma_src}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <arg line="${run.args}"/>
        </java>
    </target>
    <target name="password.service" depends="compile" description="Performs account management services">
        <java classname="com.articulate.sigma.PasswordService"
              classpath="${run.classpath}"
              fork="true">
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${basedir}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <arg line="${pword.props}"/>
        </java>
    </target>

    <!--
    ===================
    RUN TASKS FOR TESTS
    ===================
    -->

    <target name="test" depends="test.unit,test.integration"/>
    <target name="test.unit" depends="clean,prep.unit.config,compile.test" description="Runs the UnitTestSuite">
        <junit printsummary="yes"
               showoutput="yes"
               fork="yes">
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${basedir}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <formatter type="plain" usefile="false"/>
            <classpath>
                <path refid="tcp"/>
            </classpath>
            <test name="${unit.test.suite}" haltonfailure="no" todir="${reports.dir}">
                <formatter type="xml"/>
            </test>
        </junit>
        <antcall target="junit.report"/>
    </target>
    <target name="test.integration" depends="clean,prep.integration.config,compile.test" description="Runs the IntegrationTestSuite">
        <junit printsummary="yes"
               showoutput="yes"
               fork="yes">
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${basedir}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <formatter type="plain" usefile="false"/>
            <classpath>
                <path refid="tcp"/>
            </classpath>
            <test name="${integration.test.suite}" haltonfailure="no" todir="${reports.dir}">
                <formatter type="xml"/>
            </test>
        </junit>
        <antcall target="junit.report"/>
        <antcall target="prep.main.config"/> <!-- restore the main config -->
    </target>
    <target name="run-selected-test-in-corpus" depends="clean,prep.integration.config,compile.test">
        <fail unless="test.class">Must set property 'test.class'</fail>
        <junit printsummary="yes"
               showoutput="yes"
               fork="yes">
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${basedir}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <formatter type="plain" usefile="false"/>
            <classpath>
                <path refid="tcp"/>
            </classpath>
            <test name="${test.class}" haltonfailure="no" todir="${reports.dir}">
                <formatter type="xml"/>
            </test>
        </junit>
    </target>
    <target name="run-selected-test-in-integration" depends="clean,prep.integration.config,compile.test">
        <fail unless="test.class">Must set property 'test.class'</fail>
        <junit printsummary="yes"
               showoutput="yes"
               fork="yes">
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${basedir}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <formatter type="plain" usefile="false"/>
            <classpath>
                <path refid="tcp"/>
            </classpath>
            <test name="${test.class}" haltonfailure="no" todir="${reports.dir}">
                <formatter type="xml"/>
            </test>
        </junit>
        <antcall target="prep.main.config"/> <!-- restore the main config -->
    </target>
    <target name="run-selected-test-in-unit" depends="clean,prep.unit.config,compile.test">
        <fail unless="test.class">Must set property 'test.class'</fail>
        <junit printsummary="yes"
               showoutput="yes"
               fork="yes">
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${basedir}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <formatter type="plain" usefile="false"/>
            <classpath>
                <path refid="tcp"/>
            </classpath>
            <test name="${test.class}" haltonfailure="no" todir="${reports.dir}">
                <formatter type="xml"/>
            </test>
        </junit>
    </target>
    <target name="run-single-test-method-in-integration" depends="clean,prep.integration.config,compile.test">
        <fail unless="test.class">Must set property 'test.class'</fail>
        <junit printsummary="yes"
               showoutput="yes"
               fork="yes">
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${basedir}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <formatter type="plain" usefile="false"/>
            <classpath>
                <path refid="tcp"/>
            </classpath>
            <test name="${test.class}" methods="${method}" haltonfailure="no" todir="${reports.dir}">
                <formatter type="xml"/>
            </test>
        </junit>
        <antcall target="prep.main.config"/> <!-- restore the main config -->
    </target>
    <target name="run-single-test-method-in-unit" depends="clean,prep.unit.config,compile.test">
        <fail unless="test.class">Must set property 'test.class'</fail>
        <junit printsummary="yes"
               showoutput="yes"
               fork="yes">
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${basedir}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <formatter type="plain" usefile="false"/>
            <classpath>
                <path refid="tcp"/>
            </classpath>
            <test name="${test.class}" methods="${method}" haltonfailure="no" todir="${reports.dir}">
                <formatter type="xml"/>
            </test>
        </junit>
    </target>

    <!--
    =================
    DEPLOY / UNDEPLOY
    =================
    -->

    <target name="stop.tomcat" description="stop web application in tomcat">
<!--        <stop url="${mgr.url}"
              username="${username}"
              password="${password}"
              path="${context}"/>-->
        <exec executable="${catalina.base}/bin/${shutdown}">
            <env key="CATALINA_HOME" value="${catalina.base}"/>
        </exec>
    </target>

    <target name="start.tomcat" description="start web application in tomcat">
<!--        <start url="${mgr.url}"
               username="${username}"
               password="${password}"
               path="${context}"/>-->
        <exec executable="sh">
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${basedir}"/>
            <env key="CATALINA_OPS" value="${catalina.ops}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <arg value="-c"/>
            <arg value="'${catalina.base}/bin/${startup}'"/>
        </exec>
        <!--<antcall target="monitor.catalina.out"/>-->
    </target>

    <available file="${catalina.out}" property="catalina.out.present"/>
    <target name="monitor.catalina.out" if="catalina.out.present">
        <exec executable="tail" dir="${catalina.logs.dir}">
            <arg line="-f '${catalina.out}'"/>
        </exec>
    </target>

    <target name="deploy"
            depends="all"
            description="Builds the web application, starts a local Tomcat server and runs sigmakee">
        <sequential>
            <antcall target="start.tomcat"/>
            <sleep seconds="2"/>
            <deploy url="${mgr.url}"
                    username="${username}"
                    password="${password}"
                    path="${context}"
                    war="${basedir}/${dist.dir}/${web.app.name}.war"/>
            <sleep seconds="2"/>
            <antcall target="open.sigmakee.url"/>
        </sequential>
    </target>

    <target name="open.sigmakee.url">
        <exec executable="sh">
            <arg value="-c"/>
            <arg value="open -u ${deploy.url}"/>
        </exec>
    </target>

    <target name="undeploy"
            description="Removes the web application and stops the local Tomcat server">
        <sequential>
            <undeploy url="${mgr.url}"
                      username="${username}"
                      password="${password}"
                      path="${context}"/>
            <sleep seconds="2"/>
            <antcall target="stop.tomcat"/>
        </sequential>
    </target>

    <!--
    ===================
    DEBUG TASKS FOR SRC
    ===================
    -->

    <target name="debug-nb" depends="clean,compile">
        <nbjpdastart addressproperty="jpda.address" name="${impl.title}" transport="${debug.transport}">
            <classpath refid="dcp"/>
        </nbjpdastart>
        <java classname="${main.class}"
              classpathref="dcp"
              fork="true">
            <jvmarg value="-agentlib:jdwp=transport=${debug.transport},address=${jpda.address}"/>
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${basedir}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <arg line="-c Object Transaction"/>
        </java>
    </target>
    <target name="debug-selected-file-in-java" depends="clean,compile">
        <fail unless="debug.class">Must set property 'debug.class'</fail>
        <nbjpdastart addressproperty="jpda.address" name="${impl.title}" transport="${debug.transport}">
            <classpath refid="dcp"/>
        </nbjpdastart>
        <java classname="${debug.class}"
              classpathref="dcp"
              fork="true">
            <jvmarg value="-agentlib:jdwp=transport=${debug.transport},address=${jpda.address}"/>
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${basedir}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <arg line="${run.args}"/>
        </java>
    </target>
    <target name="debug.password.service" depends="compile">
        <nbjpdastart addressproperty="jpda.address" name="${impl.title}" transport="${debug.transport}">
            <classpath refid="dcp"/>
        </nbjpdastart>
        <java classname="com.articulate.sigma.PasswordService"
              classpath="${run.classpath}"
              fork="true">
            <jvmarg value="-agentlib:jdwp=transport=${debug.transport},address=${jpda.address}"/>
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${basedir}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <arg line="${pword.props}"/>
        </java>
    </target>

    <!--
    =====================
    DEBUG TASKS FOR TESTS
    =====================
    -->

    <target name="debug-selected-test-in-integration" depends="clean,prep.integration.config,compile.test">
        <fail unless="test.class">Must set property 'test.class'</fail>
        <nbjpdastart addressproperty="jpda.address" name="${impl.title}" transport="${debug.transport}">
            <classpath refid="tcp"/>
        </nbjpdastart>
        <junit printsummary="yes"
               showoutput="yes"
               fork="yes">
            <jvmarg value="-agentlib:jdwp=transport=${debug.transport},address=${jpda.address}"/>
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${basedir}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <formatter type="plain" usefile="false"/>
            <classpath>
                <path refid="tcp"/>
            </classpath>
            <test name="${test.class}" haltonfailure="no" todir="${reports.dir}">
                <formatter type="xml"/>
            </test>
        </junit>
        <antcall target="prep.main.config"/> <!-- restore the main config -->
    </target>
    <target name="debug-selected-test-in-unit" depends="clean,prep.unit.config,compile.test">
        <fail unless="test.class">Must set property 'test.class'</fail>
        <nbjpdastart addressproperty="jpda.address" name="${impl.title}" transport="${debug.transport}">
            <classpath refid="tcp"/>
        </nbjpdastart>
        <junit printsummary="yes"
               showoutput="yes"
               fork="yes">
            <jvmarg value="-agentlib:jdwp=transport=${debug.transport},address=${jpda.address}"/>
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${basedir}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <formatter type="plain" usefile="false"/>
            <classpath>
                <path refid="tcp"/>
            </classpath>
            <test name="${test.class}" haltonfailure="no" todir="${reports.dir}">
                <formatter type="xml"/>
            </test>
        </junit>
    </target>
    <target name="debug-single-test-method-in-integration" depends="clean,prep.integration.config,compile.test">
        <fail unless="test.class">Must set property 'test.class'</fail>
        <nbjpdastart addressproperty="jpda.address" name="${impl.title}" transport="${debug.transport}">
            <classpath refid="tcp"/>
        </nbjpdastart>
        <junit printsummary="yes"
               showoutput="yes"
               fork="yes">
            <jvmarg value="-agentlib:jdwp=transport=${debug.transport},address=${jpda.address}"/>
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${basedir}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <formatter type="plain" usefile="false"/>
            <classpath>
                <path refid="tcp"/>
            </classpath>
            <test name="${test.class}" methods="${method}" haltonfailure="no" todir="${reports.dir}">
                <formatter type="xml"/>
            </test>
        </junit>
        <antcall target="prep.main.config"/> <!-- restore the main config -->
    </target>
    <target name="debug-single-test-method-in-unit" depends="clean,prep.unit.config,compile.test">
        <fail unless="test.class">Must set property 'test.class'</fail>
        <nbjpdastart addressproperty="jpda.address" name="${impl.title}" transport="${debug.transport}">
            <classpath refid="tcp"/>
        </nbjpdastart>
        <junit printsummary="yes"
               showoutput="yes"
               fork="yes">
            <jvmarg value="-agentlib:jdwp=transport=${debug.transport},address=${jpda.address}"/>
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${basedir}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <formatter type="plain" usefile="false"/>
            <classpath>
                <path refid="tcp"/>
            </classpath>
            <test name="${test.class}" methods="${method}" haltonfailure="no" todir="${reports.dir}">
                <formatter type="xml"/>
            </test>
        </junit>
    </target>

    <!--
    =====
    ADMIN
    =====
    -->

    <target name="dist" depends="compile" description="Prepare and distribute the sigma.war and ${app.name}.jar files and place in ${dist.dir}.">
        <manifest file="${manifest.mf}">
            <attribute name="Built-By" value="${my.name} ${my.email}"/>
            <attribute name="Specification-Title"
                       value="${product.Name}"/>
            <attribute name="Specification-Version"
                       value="${product.version.major}.${product.version.minor}"/>
            <attribute name="Specification-Vendor"
                       value="${spec.vendor}"/>
            <attribute name="Implementation-Title"
                       value="${impl.title}"/>
            <attribute name="Implementation-Version"
                       value="${product.Version} built on ${TODAY_US}"/>
            <attribute name="Implementation-Vendor"
                       value="${nps}, ${moves.institute}, ${savage.research.group}"/>
            <attribute name="Implementation-URL"
                       value="${sumo.url}"/>
            <attribute name="Implementation-Vendor-Id"
                       value="${impl.vendor.id}"/>
            <attribute name="Main-Class"
                       value="${main.class}"/>
        </manifest>
        <jar destfile="${dist.jar}"
             basedir="${build.classes.dir}"
             manifest="${manifest.mf}">
            <metainf file="${project.license}"/>
        </jar>
        <war destfile="${dist.dir}/${web.app.name}.war"
             basedir="${build.home}"
             webxml="${web.dir}/web.xml"
             manifest="${manifest.mf}">
            <metainf file="${project.license}"/>
        </war>
        <copy todir="${build.home}" file="${dist.jar}"/> <!-- For SUMOjEdit -->
    </target>

    <!-- Copy customized config files to their respective directories -->
    <target name="prep.main.config" depends="init">
        <!-- Restore main config post integration testing -->
        <copy todir="${sigma_home}/KBs" file="${main.config}" overwrite="true"/>
    </target>
    <target name="prep.unit.config">
        <copy todir="${test.unit.resources.dir}" file="${unit.config}" overwrite="true"/>
    </target>
    <target name="prep.integration.config">
        <copy tofile="${sigma_home}/KBs/config.xml" file="${integration.config}" overwrite="true"/>
    </target>
    <target name="thorough.clean" depends="clean">
        <delete includeemptydirs="true" failonerror="false">
            <!-- Delete the old web code -->
            <fileset dir="${deploy_home}"/>
            <fileset dir="${catalina.base}/work/Catalina/localhost/${web.app.name}"/>
        </delete>
        <delete file="${dist_war}"/>
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${basedir}">
                <include name="junit*.properties"/>
            </fileset>
        </delete>
        <!-- Prune KB after integration tests -->
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${sigma_home}/KBs">
                <include name="*.tptp"/>
                <include name="*.ser"/>
            </fileset>
            <fileset dir="${sigma_home}/KBs/WordNetMappings">
                <include name="*.ser"/>
            </fileset>
        </delete>
        <delete>
            <fileset dir="${catalina.logs.dir}">
                <include name="*.*"/>
            </fileset>
            <fileset dir="${basedir}">
                <include name="*.owl"/>
                <include name="*.tab"/>
            </fileset>
        </delete>
    </target>
    <target name="all" depends="clean,dist">
        <echo message="System date/time is: ${TODAY_US}"/>
    </target>

</project>
