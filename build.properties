build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.home=build
build.classes.dir=${build.home}/WEB-INF/classes
build.test.classes.dir=${build.home}/test/classes
build.test.results.dir=${build.home}/test/results
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
buildfile=build.xml
# Uncomment to specify the preferred debugger connection transport:
debug.transport=dt_socket
debug.classpath=\
    ${run.classpath}
debug.modulepath=\
    ${run.modulepath}
debug.test.classpath=\
    ${run.test.classpath}
debug.test.modulepath=\
    ${run.test.modulepath}
# Files in build.classes.dir which should be excluded from distribution jar
dist.archive.excludes=
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/${app.name}.jar
dist.javadoc.dir=${dist.dir}/doc/api
excludes=
file.reference.corpus-java=test/corpus/java
file.reference.integration-java=test/integration/java
file.reference.src-java=src/java
file.reference.unit-java=test/unit/java
includes=**
jar.compress=false
# Leverage Ivy here
javac.classpath=${ant.refid:compile.classpath}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=false
javac.external.vm=true
javac.release=11
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    lib/hamcrest-core-1.3.jar:\
    lib/junit-4.12.jar
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.html5=false
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
main.class=com.articulate.sigma.KB
manifest.file=MANIFEST.MF
meta.inf.dir=${src.dir}/META-INF
mkdist.disabled=false
platform.active=default_platform
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project.
# You may also define separate properties like run-sys-prop.name=value instead of -Dname=value.
# To set system properties for unit tests define test-sys-prop.name=value:
run.jvmargs=-Xmx10g
run.modulepath=\
    ${javac.modulepath}
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
run.test.modulepath=\
    ${javac.test.modulepath}
source.encoding=UTF-8
src.dir=${file.reference.src-java}
test.integration.dir=${file.reference.integration-java}
test.corpus.dir=${file.reference.corpus-java}
test.unit.dir=${file.reference.unit-java}

# Specific SigmaKEE props
web.dir=web

web.app.name=sigma
app.name=${web.app.name}kee
sigma.home=${user.home}/.${app.name}
sigma.install.downloads=${sigma.home}/downloads
sigma.src=${basedir}
kbs.home=../sumo
tptp.home=../TPTP-ANTLR
ontologyportal.git=${workspace}
sigma.utils.home=../SigmaUtils

product.Name=Sigma Knowledge Engineering Environment (${ant.project.name})
product.version.major=1
product.version.minor=0
product.version.patch=0
product.Version=${product.version.major}.${product.version.minor}.\
    ${product.version.patch}
spec.vendor=Adam Pease
project.licensePath=LICENSE

# Tomcat Manager properties
catalina.base=${catalina.home}
catalina.ops=-Xms500M -Xmx2500M
startup=startup.sh
shutdown=shutdown.sh
tomcat.server=localhost
tomcat.port=8080
# Since Tomcat 7, note that the URL for the text interface has changed from "/manager" to "/manager/text".
mgr.url=http://${tomcat.server}:${tomcat.port}/manager/text
# Check that these properties match in ${catalina.home}/conf/tomcat-users.xml
username=tomcat
password=tomcat
context=/${web.app.name}

# Acct mgmt needs work
deploy.url=http://localhost:8080/${web.app.name}/login.html

# Go directly to the KB page. Takes a while to load
#deploy.url=http://localhost:8080/${web.app.name}/KBs.jsp
#deploy.url=http://localhost:8080/${web.app.name}/init.jsp

dist.home=${catalina.home}/webapps
deploy.home=${dist.home}/${web.app.name}
dist.war=${dist.dir}/${web.app.name}.war

test.result=test.result
test.unit.resources.dir=${test.unit.dir}/resources
test.integration.resources.dir=${test.integration.dir}/resources

#System.out.println("PasswordService: ");
#System.out.println("-h    show this Help message");
#System.out.println("-l    Login");
#System.out.println("-c    Create db");
#System.out.println("-a    create Admin user");
#
#System.out.println("-u    show User IDs");
#System.out.println("-r    Register a new username and password (fail if username taken)");
#System.out.println("-a3 <u> <p> <e>  create Admin user");
#System.out.println("-o <id>          change user role");
#System.out.println("-n <id>          create New guest user");
#System.out.println("-f <id>          find user with given ID");
#System.out.println("-d <id>          Delete user with given ID");
pword.props=-f sa
